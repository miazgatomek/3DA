{"version":3,"sources":["components/header/header.js","components/detector/components/box.js","components/detector/components/donut.js","components/detector/detector.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Fragment","className","Component","Box","meshRef","createRef","this","current","rotation","x","props","ref","position","y","z","args","INNER_BOX_LENGTH","INNER_BOX_WIDTH","attach","color","transparent","opacity","Donut","degreesToRadians","degrees","Math","PI","getY","i","sin","radius","getZ","cos","boxProps","Array","from","_","map","prop","key","Detector","OrbitControls","intensity","angle","penumbra","object","THREE","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wRAgBeA,E,4JAZX,WACI,OACI,cAAC,IAAMC,SAAP,UACI,sBAAKC,UAAU,oBAAf,UACI,4CACA,kD,GANCC,a,sCCCRC,EAAb,kDACI,aAAe,IAAD,8BACV,gBACKC,QAAUC,sBAFL,EADlB,qDAMI,WACIC,KAAKF,QAAQG,QAAQC,SAASC,EAAIH,KAAKI,MAAMF,WAPrD,oBAUI,WACI,OACI,uBAAMG,IAAKL,KAAKF,QAASQ,SAAU,CAACN,KAAKI,MAAMD,EAAGH,KAAKI,MAAMG,EAAGP,KAAKI,MAAMI,GAA3E,UACI,mCAAmBC,KAAM,CAACC,EAAkBC,EAAiBA,KAC7D,qCAAqBC,OAAO,WAAWC,MAAM,aAAaC,aAAa,EAAMC,QAAS,YAdtG,GAAyBnB,aCAZoB,EAAb,kDACI,WAAYZ,GAAQ,IAAD,sBACf,eAEA,IAAMa,EAAmB,SAACC,GAAD,OAAcC,KAAKC,GAAK,IAAOF,GAClDG,EAAO,SAACC,GAAD,OAAOH,KAAKI,IAAIN,EAAqB,GAAJK,IAAWlB,EAAMoB,QACzDC,EAAO,SAACH,GAAD,OAAOH,KAAKO,IAAIT,EAAqB,GAAJK,IAAWlB,EAAMoB,QALhD,OAOf,EAAKG,SAAWC,MAAMC,KAAKD,MAAM,KAAK,SAACE,EAAGR,GAAJ,MAAW,CAACnB,EAAG,EAAGI,EAAGc,EAAKC,GAAId,EAAGiB,EAAKH,GAAIpB,SAAUe,EAAiB,IAAU,GAAJK,OAPlG,EADvB,0CAWI,WACI,OACI,cAAC,IAAM5B,SAAP,UACI,+BACKM,KAAK2B,SAASI,KAAI,SAACC,EAAMV,GAAP,OAAa,wBAAC,EAAD,2BAASU,GAAT,IAAeC,IAAKX,gBAfxE,GAA2B1B,aCKde,EAAkB,IAClBD,EAAmB,EAqBjBwB,EAhBE,WACb,OACI,cAAC,IAAMxC,SAAP,UACI,qBAAKC,UAAU,sBAAf,SACI,eAAC,IAAD,WACI,cAACwC,EAAA,EAAD,IACA,8BAAcC,UAAW,KACzB,2BAAW9B,SAAU,CAAC,IAAK,IAAK,KAAM+B,MAAO,IAAMC,SAAU,IAC7D,2BAAWC,OAAQ,IAAIC,aAAiB,OACxC,cAAC,EAAD,CAAOhB,OAhBO,YCKnBiB,MATf,WACE,OACE,sBAAK9C,UAAU,MAAf,UACE,cAAC,EAAD,IACE,cAAC,EAAD,QCIO+C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b50f7032.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './header.scss'\n\nclass Header extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"header__container\">\n                    <span>Detector</span>\n                    <span>About</span>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;\n","import React, {Component, createRef} from \"react\";\nimport {INNER_BOX_LENGTH, INNER_BOX_WIDTH} from \"../detector\";\n\n\nexport class Box extends Component {\n    constructor() {\n        super();\n        this.meshRef = createRef();\n    }\n\n    componentDidMount() {\n        this.meshRef.current.rotation.x = this.props.rotation;\n    }\n\n    render() {\n        return (\n            <mesh ref={this.meshRef} position={[this.props.x, this.props.y, this.props.z]}>\n                <boxBufferGeometry args={[INNER_BOX_LENGTH, INNER_BOX_WIDTH, INNER_BOX_WIDTH]}/>\n                <meshLambertMaterial attach=\"material\" color=\"lightgreen\" transparent={true} opacity={0.5}/>\n            </mesh>\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport {Box} from \"./box\";\n\n\nexport class Donut extends Component {\n    constructor(props) {\n        super();\n\n        const degreesToRadians = (degrees) => (Math.PI / 180) * degrees;\n        const getY = (i) => Math.sin(degreesToRadians(i * 20)) * props.radius;\n        const getZ = (i) => Math.cos(degreesToRadians(i * 20)) * props.radius;\n\n        this.boxProps = Array.from(Array(19), (_, i) => ({x: 0, y: getY(i), z: getZ(i), rotation: degreesToRadians(360 - i * 20)}));\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <mesh>\n                    {this.boxProps.map((prop, i) => <Box {...prop} key={i}/>)}\n                </mesh>\n            </React.Fragment>\n        )\n    }\n}\n","import React from 'react';\nimport './detector.scss'\nimport {Canvas} from \"react-three-fiber\";\nimport {OrbitControls} from \"@react-three/drei\";\nimport * as THREE from \"three\";\nimport {Donut} from \"./components/donut\";\n\n\nexport const INNER_DONUT_RADIUS = 2;\nexport const INNER_BOX_WIDTH = 0.55;\nexport const INNER_BOX_LENGTH = 8;\n\nexport const OUTER_DONUT_RADIUS = 5;\n\n\nconst Detector = () => {\n    return (\n        <React.Fragment>\n            <div className=\"detector__container\">\n                <Canvas>\n                    <OrbitControls/>\n                    <ambientLight intensity={0.1}/>\n                    <spotLight position={[100, 100, 100]} angle={0.15} penumbra={1}/>\n                    <primitive object={new THREE.AxesHelper(1000)} />\n                    <Donut radius={INNER_DONUT_RADIUS}/>\n                </Canvas>\n            </div>\n        </React.Fragment>\n    );\n}\n\nexport default Detector;\n","import './App.scss';\nimport Header from \"./components/header/header\";\nimport Detector from \"./components/detector/detector\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header></Header>\n        <Detector></Detector>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}