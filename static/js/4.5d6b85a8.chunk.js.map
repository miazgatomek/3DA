{"version":3,"sources":["components/three-js/components/detector/components/box.js","components/three-js/components/detector/components/ring.js","components/three-js/components/detector/components/combined-rings.js","components/three-js/components/detector/detector.js","components/three-js/components/line-event/line-event.js","components/three-js/components/track-event/components/track.js","components/three-js/components/track-event/track-event.js","components/three-js/three-js.js"],"names":["Box","props","meshRef","createRef","this","current","rotation","x","ref","position","y","z","args","length","width","height","attach","color","transparent","opacity","Component","Ring","degreesToRadians","degrees","Math","PI","getY","i","sin","radius","getZ","cos","boxProps","Array","from","_","Fragment","map","prop","key","CombinedRings","Detector","EVENTS","event0","event1","event2","event3","event4","event5","event6","event7","event8","event9","event10","event11","LineEvent","tracksData","eventIndex","fTracks","tracksIds","keys","element","toString","points","forEach","track","fPolyX","j","push","fPolyY","fPolyZ","Line","lineWidth","Track","TrackEvent","useDynamicRefs","getRef","setRef","useFrame","id","set","ThreeJS","useState","setEventIndex","_setEventIndex","index","NUM_OF_EVENTS","showTracks","setShowTracks","className","onClick","camera","OrbitControls","intensity","angle","penumbra"],"mappings":"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","file":"static/js/4.5d6b85a8.chunk.js","sourcesContent":["import React, {Component, createRef} from \"react\";\n\n\nexport class Box extends Component {\n    constructor(props) {\n        super(props);\n        this.meshRef = createRef();\n    }\n\n    componentDidMount() {\n        this.meshRef.current.rotation.x = this.props.rotation;\n    }\n\n    render() {\n        return (\n            <mesh ref={this.meshRef} position={[this.props.x, this.props.y, this.props.z]}>\n                <boxBufferGeometry args={[this.props.length, this.props.width, this.props.height]}/>\n                <meshLambertMaterial attach=\"material\" color={this.props.color} transparent={true} opacity={0.7}/>\n            </mesh>\n        );\n    }\n}\n","import React, {Component} from \"react\";\nimport {Box} from \"./box\";\n\n\nexport class Ring extends Component {\n    constructor(props) {\n        super();\n\n        const degreesToRadians = (degrees) => (Math.PI / 180) * degrees;\n        const getY = (i) => Math.sin(degreesToRadians(i * 20)) * props.radius;\n        const getZ = (i) => Math.cos(degreesToRadians(i * 20)) * props.radius;\n\n        this.boxProps = Array.from(Array(19), (_, i) => ({\n            x: 0,\n            y: getY(i),\n            z: getZ(i),\n            rotation: degreesToRadians(360 - i * 20)\n        }));\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <mesh>\n                    {this.boxProps.map((prop, i) =>\n                        <Box\n                            {...prop}\n                            key={i}\n                            color={this.props.color}\n                            width={this.props.width}\n                            height={this.props.height}\n                            length={this.props.length}\n                        />)\n                    }\n                </mesh>\n            </React.Fragment>\n        )\n    }\n}\n","import {Ring} from \"./ring\";\nimport React from \"react\";\n\n\nexport const INNER_RING_COLOR = '#4DED30'\nexport const INNER_RING_RADIUS = 2;\nexport const INNER_BOX_WIDTH = 0.4;\nexport const INNER_BOX_HEIGHT = 1.5;\nexport const INNER_BOX_LENGTH = 8;\n\nexport const MIDDLE_RING_COLOR = '#949494'\nexport const MIDDLE_RING_RADIUS = 3.2;\nexport const MIDDLE_BOX_WIDTH = 0.95;\nexport const MIDDLE_BOX_HEIGHT = 0.55;\nexport const MIDDLE_BOX_LENGTH = 8;\n\nexport const OUTER_RING_COLOR = '#EE2400'\nexport const OUTER_RING_RADIUS = 3.6;\nexport const OUTER_BOX_WIDTH = 1.29;\nexport const OUTER_BOX_HEIGHT = 0.1;\nexport const OUTER_BOX_LENGTH = 8;\n\n\nconst CombinedRings = () => {\n    return (\n        <mesh>\n            <Ring\n                color={INNER_RING_COLOR}\n                radius={INNER_RING_RADIUS}\n                width={INNER_BOX_WIDTH}\n                height={INNER_BOX_HEIGHT}\n                length={INNER_BOX_LENGTH}\n            />\n            <Ring\n                color={MIDDLE_RING_COLOR}\n                radius={MIDDLE_RING_RADIUS}\n                width={MIDDLE_BOX_WIDTH}\n                height={MIDDLE_BOX_HEIGHT}\n                length={MIDDLE_BOX_LENGTH}\n            />\n            <Ring\n                color={OUTER_RING_COLOR}\n                radius={OUTER_RING_RADIUS}\n                width={OUTER_BOX_WIDTH}\n                height={OUTER_BOX_HEIGHT}\n                length={OUTER_BOX_LENGTH}\n            />\n        </mesh>\n    );\n}\n\nexport default CombinedRings;\n","import React from 'react';\nimport CombinedRings from \"./components/combined-rings\";\n\n\nconst Detector = () => {\n    return (\n        <React.Fragment>\n                <mesh>\n                    <CombinedRings/>\n                </mesh>\n        </React.Fragment>\n    );\n}\n\nexport default Detector;\n","import React from 'react';\nimport {Line} from \"@react-three/drei\";\nimport event0 from '../../../../utils/events/event35_run226466.json';\nimport event1 from '../../../../utils/events/event41_run226466.json';\nimport event2 from '../../../../utils/events/event91_run226466.json';\nimport event3 from '../../../../utils/events/event254_run226466.json';\nimport event4 from '../../../../utils/events/event769_run122374.json';\nimport event5 from '../../../../utils/events/event786_run122374.json';\nimport event6 from '../../../../utils/events/event1153_run122374.json';\nimport event7 from '../../../../utils/events/event2162_run226466.json';\nimport event8 from '../../../../utils/events/event3055_run226466.json';\nimport event9 from '../../../../utils/events/event3205_run122374.json';\nimport event10 from '../../../../utils/events/event3490_run226466.json';\nimport event11 from '../../../../utils/events/event4047_run226466.json';\n\nconst EVENTS = [event0, event1, event2, event3, event4, event5, event6, event7, event8, event9, event10, event11];\n\nconst LineEvent = (props) => {\n    const tracksData = EVENTS[props.eventIndex - 1].fTracks;\n    const tracksIds = Array.from(Array(tracksData.length).keys()).map(element => element.toString());\n\n    const points = new Array(tracksData.length).map(i => []);\n\n    tracksData.forEach((track, i) => {\n       points[i] = [];\n\n       track.fPolyX.forEach((x, j) => {\n           points[i].push([x / 40, track.fPolyY[j] / 40, track.fPolyZ[j] / 40]);\n       })\n    });\n\n    return (\n        <React.Fragment>\n            <mesh>\n                {\n                    tracksIds.map((_, i) => (\n                        <Line\n                            points={points[i]}\n                            key={i}\n                            color={'yellow'}\n                            lineWidth={0.7}\n                        />\n                    ))\n                }\n            </mesh>\n        </React.Fragment>\n    )\n}\n\nexport default LineEvent;\n","import React, {Component} from \"react\";\n\n\nexport class Track extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <mesh>\n                    <sphereBufferGeometry args={[0.07, 10, 10]}/>\n                    <meshLambertMaterial attach=\"material\" color=\"yellow\"/>\n                </mesh>\n            </React.Fragment>\n        )\n    }\n}\n","import React from 'react';\nimport event0 from '../../../../utils/events/event35_run226466.json';\nimport event1 from '../../../../utils/events/event41_run226466.json';\nimport event2 from '../../../../utils/events/event91_run226466.json';\nimport event3 from '../../../../utils/events/event254_run226466.json';\nimport event4 from '../../../../utils/events/event769_run122374.json';\nimport event5 from '../../../../utils/events/event786_run122374.json';\nimport event6 from '../../../../utils/events/event1153_run122374.json';\nimport event7 from '../../../../utils/events/event2162_run226466.json';\nimport event8 from '../../../../utils/events/event3055_run226466.json';\nimport event9 from '../../../../utils/events/event3205_run122374.json';\nimport event10 from '../../../../utils/events/event3490_run226466.json';\nimport event11 from '../../../../utils/events/event4047_run226466.json';\nimport {useFrame} from \"react-three-fiber\";\nimport {Track} from \"./components/track\";\nimport useDynamicRefs from 'use-dynamic-refs';\n\n\nconst EVENTS = [event0, event1, event2, event3, event4, event5, event6, event7, event8, event9, event10, event11];\n\n\nconst TrackEvent = (props) => {\n    const [getRef, setRef] = useDynamicRefs();\n\n    const tracksData = EVENTS[props.eventIndex - 1].fTracks;\n    const tracksIds = Array.from(Array(tracksData.length).keys()).map(element => element.toString());\n\n    let position = 0;\n\n    useFrame(() => {\n        if (position < tracksData[0].fPolyX.length) {\n            tracksIds.forEach((id, i) => {\n               const ref = getRef(id);\n               ref.current.position.set(\n                   tracksData[i].fPolyX[position] / 40,\n                   tracksData[i].fPolyY[position] / 40,\n                   tracksData[i].fPolyZ[position] / 40,\n               );\n            });\n\n            position++;\n        }\n    });\n\n    return (\n        <React.Fragment>\n            {tracksIds.map((id, i) => (\n                <mesh ref={setRef(id)} key={i}>\n                    <Track/>\n                </mesh>\n            ))}\n        </React.Fragment>\n    )\n}\n\nexport default TrackEvent;\n","import { OrbitControls } from \"@react-three/drei\";\nimport Detector from \"components/three-js/components/detector/detector\";\nimport LineEvent from \"components/three-js/components/line-event/line-event\";\nimport TrackEvent from \"components/three-js/components/track-event/track-event\";\nimport React, { useState } from \"react\";\nimport { Canvas } from \"react-three-fiber\";\nimport './three-js.scss'\n\nconst NUM_OF_EVENTS = 12;\n\nexport default function ThreeJS() {\n    const [eventIndex, setEventIndex] = useState(1);\n    const _setEventIndex = (index) => {\n        if (index >= 1 && index <= NUM_OF_EVENTS) {\n            setEventIndex(index);\n        } else {\n            setEventIndex(index === NUM_OF_EVENTS + 1 ? 1 : NUM_OF_EVENTS);\n        }\n    };\n\n    const [showTracks, setShowTracks] = useState(true);\n    const _setShowTracks = () => {\n        setShowTracks(!showTracks);\n    }\n\n    // const [currentScreen, setCurrentScreen] = useState('detector');\n\n    return (\n        <div className=\"canvas__container\">\n            <div className=\"canvas__buttons-row\">\n                <div className=\"canvas__button-group\">\n                    <button\n                        className=\"canvas__button\"\n                        onClick={() => _setEventIndex(eventIndex - 1)}\n                    >\n                        Previous Event\n                    </button>\n\n                    <button\n                        className=\"canvas__button\"\n                        onClick={() => _setEventIndex(eventIndex + 1)}\n                    >\n                        Next Event\n                    </button>\n\n                    <div className=\"canvas__event-index\">\n                        <span>{eventIndex} / {NUM_OF_EVENTS}</span>\n                    </div>\n                </div>\n\n                <div className=\"canvas__button-group\">\n                    <div className=\"canvas__event-index\">\n                        <span>{showTracks ? 'Tracks' : 'Lines'}</span>\n                    </div>\n\n                    <button\n                        className=\"canvas__button\"\n                        onClick={() => _setShowTracks()}\n                    >\n                        Switch between lines/tracks\n                    </button>\n                </div>\n            </div>\n            <div className=\"canvas__detector-container\">\n                <Canvas camera={{position: [10, 6, 10]}}>\n                    <OrbitControls/>\n                    <ambientLight intensity={0.1}/>\n                    <spotLight position={[100, 100, 100]} angle={0.15} penumbra={1}/>\n                    {/*<primitive object={new THREE.AxesHelper(1000)} />*/}\n                    {showTracks && <TrackEvent eventIndex={eventIndex}/>}\n                    {!showTracks && <LineEvent eventIndex={eventIndex}/>}\n                    <Detector/>\n                </Canvas>\n            </div>\n        </div>\n    )\n}"],"sourceRoot":""}